---
- name: Install and configure Kubernetes components
  hosts: all
  become: yes
  tasks:

    - name: Enable IP forwarding
      ansible.builtin.copy:
        dest: /etc/sysctl.d/k8s.conf
        content: |
          net.ipv4.ip_forward = 1
      notify: Reload sysctl

    - name: Apply sysctl changes
      ansible.builtin.command: sysctl --system
      changed_when: false

    - name: Ensure dependencies are installed
      ansible.builtin.apt:
        name:
          - wget
          - curl
          - apt-transport-https
          - ca-certificates
          - gpg
        state: present

    - name: Download containerd
      ansible.builtin.get_url:
        url: "https://github.com/containerd/containerd/releases/download/v2.0.0/containerd-2.0.0-linux-amd64.tar.gz"
        dest: "/tmp/containerd.tar.gz"
        mode: '0644'

    - name: Extract containerd
      ansible.builtin.unarchive:
        src: "/tmp/containerd.tar.gz"
        dest: "/usr/local"
        remote_src: yes

    - name: Download runc
      ansible.builtin.get_url:
        url: "https://github.com/opencontainers/runc/releases/download/v1.2.1/runc.amd64"
        dest: "/tmp/runc.amd64"
        mode: '0755'

    - name: Install runc
      ansible.builtin.command: install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc
      args:
        creates: /usr/local/sbin/runc

    - name: Download CNI plugins
      ansible.builtin.get_url:
        url: "https://github.com/containernetworking/plugins/releases/download/v1.6.0/cni-plugins-linux-amd64-v1.6.0.tgz"
        dest: "/tmp/cni-plugins.tgz"
        mode: '0644'
    - name: Ensure CNI binary directory exists
      file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: Extract CNI plugins
      ansible.builtin.unarchive:
        src: "/tmp/cni-plugins.tgz"
        dest: "/opt/cni/bin"
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: "/opt/cni/bin"

    - name: Create containerd configuration directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd config
      ansible.builtin.command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Configure containerd
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"
        mode: '0644'
      notify: Restart containerd

    - name: Download containerd systemd service
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
        dest: "/etc/systemd/system/containerd.service"
        mode: '0644'

    - name: Reload systemd and enable containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Add Kubernetes apt repository key
      ansible.builtin.shell:
        cmd: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        line: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
        create: yes

    - name: Install Kubernetes packages
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
      retries: 5
      delay: 10
      register: result
      until: result is success

    - name: Hold Kubernetes packages
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable kubelet service
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started

  handlers:
    - name: Reload sysctl
      ansible.builtin.command: sysctl --system
      changed_when: false

    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted