- name: Initialize Kubernetes Master
  hosts: master
  become: yes
  tasks:
    
    - name: Initialize kubeadm
      ansible.builtin.command: kubeadm init --pod-network-cidr=192.168.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Generate join command
      ansible.builtin.command: kubeadm token create --print-join-command
      register: join_command
      changed_when: false

    - name: Save join command to a file
      ansible.builtin.copy:
        content: "{{ join_command.stdout }}"
        dest: "/tmp/join_command.txt"
        mode: '0644'

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Copy kubeconfig file
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Set KUBECONFIG environment variable in .bashrc
      ansible.builtin.lineinfile:
        path: /home/ubuntu/.bashrc
        line: 'export KUBECONFIG=/home/ubuntu/.kube/config'
        create: yes
        state: present

    - name: Download Calico manifest if not exists
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/calico.yaml"
        dest: "/home/ubuntu/calico.yaml"
        mode: '0644'

    - name: Apply Calico network plugin
      ansible.builtin.command: kubectl apply -f /home/ubuntu/calico.yaml
      become_user: ubuntu
      args:
        creates: /etc/cni/net.d/calico-kubeconfig

    - name: Clone kubectx repository
      ansible.builtin.git:
        repo: "https://github.com/ahmetb/kubectx.git"
        dest: "/opt/kubectx"
        version: "master"

    - name: Create symbolic links for kubectx and kubens
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "/opt/kubectx/kubectx", dest: "/usr/local/bin/kubectx" }
        - { src: "/opt/kubectx/kubens", dest: "/usr/local/bin/kubens" }

    - name: Download and install k9s if not installed
      ansible.builtin.shell: curl -sS https://webinstall.dev/k9s | bash
      args:
        creates: /usr/local/bin/k9s

    - name: Add alias for kubectl in .bashrc
      ansible.builtin.lineinfile:
        path: /home/ubuntu/.bashrc
        line: "alias k='kubectl'"
        create: yes
        state: present

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"

    - name: Copy Kubernetes admin.conf to kubeconfig
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: '0644'

    - name: Apply Metrics Server manifest
      ansible.builtin.command: >
        kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

    - name: Patch Metrics Server Deployment
      ansible.builtin.command: >
        kubectl patch deployment metrics-server -n kube-system
        --type='json' -p='[
          {
            "op": "add",
            "path": "/spec/template/spec/containers/0/args/-",
            "value": "--kubelet-insecure-tls"
          }
        ]'

